{"version":3,"sources":["shared/consts.ts","components/StartButton.tsx","components/Checkbox.tsx","components/YearlyTax.tsx","components/SalaryInput.tsx","components/FormDeduction.tsx","components/TaxDeduction.tsx","components/Main.tsx","index.tsx"],"names":["CurrentScreen","StartButton","isVisibleTitle","onClick","prefix","title","type","className","onempty","Checkbox","children","isDisabled","disabled","format","deduction","toString","replace","getLabelCheckbox","year","includes","YearlyTax","deductionList","map","i","SalaryInput","isRequired","name","onChange","placeHolder","id","placeholder","required","salaryInMonth","MAX_TAX","FormDeduction","useState","setList","empty","action","htmlFor","evt","target","value","taxByYear","rest","taxList","taxDeduction","numberOfYear","Array","Math","round","fill","push","getDeductionList","length","TaxDeduction","onClosePopup","Main","screen","setScreen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66bc1ee0.chunk.js","sourcesContent":["export const CurrentScreen = {\n  Popup: `popup`,\n  Start: `start`,\n};\n","import React from 'react';\n\ntype Props = {\n  className?: string;\n  isVisibleTitle: boolean;\n  onClick: () => void;\n  prefix: string;\n  title: string;\n  type?: 'button' | 'submit' | 'reset';\n}\n\nconst StartButton: React.FC<Props> = (\n    { isVisibleTitle, onClick, prefix, title, type = 'button', className }: Props\n) => {\n  return (\n    <button\n      className={`button button--${prefix} ${className ? className : ``}`}\n      onClick={onClick}\n      type={type}\n      title={title}\n    >\n      {isVisibleTitle ? title : ``}\n    </button>\n  );\n};\n\nexport default StartButton;\n","import React from 'react';\n\ntype Props = {\n  children: JSX.Element;\n  isDisabled: boolean;\n  className?: string;\n  onClick?: (evt: React.MouseEvent) => void;\n  prefix?: string;\n  type?: string;\n}\n\nconst onempty = () => ``;\n\nconst Checkbox: React.FC<Props> = (\n    { children, isDisabled, className, onClick = onempty, prefix, type = `checkbox` }: Props\n) => {\n  return (\n    <label\n      className={`checkbox ${prefix ? `checkbox--${prefix}` : ``} ${className ? `${className}` : ``}`}\n    >\n      {children}\n      <input\n        disabled={isDisabled}\n        className=\"checkbox__input\"\n        onClick={onClick}\n        type={type}\n      />\n      <span className={`checkbox__icon ${prefix ? `checkbox__icon--${prefix}` : ``}`}/>\n    </label>\n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\n\nimport Checkbox from './Checkbox';\n\ntype Props = {\n  deductionList: number[];\n}\n\nconst format = (deduction: number) => {\n  return deduction\n  .toString()\n  .replace(/(?!^)(?=(?:\\d{3})+(?:\\.|$))/gm, ' ');\n};\n\nconst getLabelCheckbox = (deduction: number, year: number) => {\n  return (\n    <>\n      <span className=\"checkbox__sum\">\n        {`${format(deduction)} рублей `}\n      </span>\n      <span className=\"checkbox__year\">\n        в{year === 1 ? \"о\" : \"\"} {year + 1}-{[1, 5, 6, 7].includes(year) ? \"ой\" :\n          (year === 2 ? \"ий\" : \"ый\")} год\n      </span>\n    </>\n  );\n};\n\nconst YearlyTax: React.FC<Props> = ({ deductionList }: Props) => {\n  return (\n    <div className=\"early-pay\">\n      <label className=\"early-pay__label\">\n        Итого можете внести в качестве досрочных:\n      </label>\n      {deductionList.map((deduction, i) => {\n        return (\n            <Checkbox\n                key={`${deduction}-${i}`}\n                isDisabled={false}\n                className={`early-pay__checkbox`}>\n              {getLabelCheckbox(deduction, i)}\n            </Checkbox>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default YearlyTax;\n","import React from 'react';\n\ntype Props = {\n  className?: string;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  name: string;\n  onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n  prefix?: string;\n  placeHolder?: string;\n  type: string;\n}\n\nconst SalaryInput: React.FC<Props> = ({\n  className, isDisabled = false, isRequired = false, name, onChange, placeHolder, prefix, type\n}: Props) => {\n  return (\n    <input\n      className={`input ${prefix ? `input--${prefix}` : ``} ${className ? className : ``}`}\n      disabled={isDisabled}\n      id={name}\n      name={name}\n      onChange={onChange}\n      placeholder={`${placeHolder ? `${placeHolder}` : ``}`}\n      required={isRequired}\n      type={type}\n    />\n\n  );\n};\n\nexport default SalaryInput;\n","import React, { useState } from 'react';\n\nimport StartButton from './StartButton';\nimport YearlyTax from './YearlyTax';\nimport SalaryInput from './SalaryInput';\n\nlet salaryInMonth = 0;\n\nconst MAX_TAX = 260000;\n\nconst getDeductionList = (taxDeduction: number, rest: number, numberOfYear: number) => {\n\n  const taxList = new Array(Math.round(numberOfYear)).fill(Math.round(taxDeduction));\n\n  if (rest !== 0) {\n    taxList.push(Math.round(rest));\n  }\n\n  return taxList;\n};\n\nconst FormDeduction: React.FC = () => {\n  const [deductionList, setList] = useState<Array<number>>([]);\n\n  const onChangeInput = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    setList([]);\n    salaryInMonth = +evt.target.value;\n  }\n\n  const showDeduction = () => {\n\n    if (salaryInMonth < 10000) {\n      setList([]);\n      return;\n    }\n\n      const taxByYear = (salaryInMonth * 12) * 0.13;\n      const rest = MAX_TAX % taxByYear;\n      const numberOfYears = (MAX_TAX - rest) / taxByYear;\n      const taxList = getDeductionList(taxByYear, rest, numberOfYears);\n\n      setList(taxList);\n  };\n\n  const empty = () => ``;\n\n  return (\n    <form\n      action=\"#\"\n      className=\"form-deduction\"\n    >\n      <label className=\"form-deduction__title\" htmlFor=\"salary\">\n        Ваша зарплата в месяц\n      </label>\n      <SalaryInput\n        className={'form-deduction__sum'}\n        isRequired={true}\n        name={'salary'}\n        onChange={onChangeInput}\n        placeHolder={'Введите данные'}\n        type={'number'}\n      />\n      <p className=\"form-deduction__action\"\n         onClick={showDeduction}>Рассчитать</p>\n      {deductionList.length !== 0 && (\n        <YearlyTax\n          deductionList={deductionList}\n        />\n      )}\n\n      <div className=\"form-deduction__container-decrease\">\n        <strong className=\"form-deduction__title\">\n          Что уменьшаем?\n        </strong>\n        <div className=\"form-deduction__group-buttons\">\n          <StartButton\n            className={`form-deduction__button-pay`}\n            isVisibleTitle={true}\n            onClick={empty}\n            prefix={`decrease button--decrease-active`}\n            title={`Платёж`}\n          />\n          <StartButton\n            isVisibleTitle={true}\n            onClick={empty}\n            prefix={`decrease`}\n            title={`Срок`}\n          />\n        </div>\n      </div>\n      <StartButton\n        className={`form-deduction__button-submit`}\n        isVisibleTitle={true}\n        onClick={empty}\n        prefix={`add`}\n        title={`Добавить`}\n        type={`submit`}\n      />\n    </form>\n  );\n};\n\nexport default FormDeduction;\n","import React from 'react';\n\nimport StartButton from './StartButton';\nimport FormDeduction from './FormDeduction';\n\ntype Props = {\n  onClosePopup: () => void;\n}\n\nconst TaxDeduction: React.FC<Props> = ({ onClosePopup }: Props) => {\n  return (\n    <section className=\"tax-deduction\">\n      <h1 className=\"tax-deduction__title\">\n        Налоговый вычет\n      </h1>\n      <StartButton\n        className={`tax-deduction__button-close-popup`}\n        isVisibleTitle={false}\n        onClick={onClosePopup}\n        prefix={`close-popup`}\n        title={`Закрыть попап`}\n      />\n      <p className=\"tax-deduction__description\">\n        Используйте налоговый вычет чтобы погасить ипотеку досрочно.\n        Размер налогового вычета составляет не более 13% от своего официального годового дохода.\n      </p>\n\n      <FormDeduction />\n\n    </section>\n  );\n};\n\nexport default TaxDeduction;\n","import React, { useState } from 'react';\n\nimport { CurrentScreen } from '../shared/consts';\n\nimport StartButton from './StartButton';\nimport TaxDeduction from './TaxDeduction';\n\nconst Main: React.FC = () => {\n\n  const [screen, setScreen] = useState(CurrentScreen.Start);\n\n  const openPopup = () => {\n    setScreen(CurrentScreen.Popup);\n  };\n\n  const closePopup = () => {\n    setScreen(CurrentScreen.Start);\n  };\n\n  return (\n    <div className={`main main--${screen}`}>\n      <div className={`main__wrapper main__wrapper--${screen}`}>\n        {screen === CurrentScreen.Start && (\n          <StartButton\n            isVisibleTitle={true}\n            onClick={openPopup}\n            prefix={`open-popup`}\n            title={`Налоговый вычет`}\n          />\n        )}\n        {screen === CurrentScreen.Popup && (\n          <TaxDeduction\n            onClosePopup={closePopup}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Main from './components/Main';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}