{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teo/Documents/test_works/outside_digital/src/components/YearlyTax.tsx\";\nimport React from 'react';\nimport Checkbox from './Checkbox';\n\nconst format = deduction => {\n  return deduction.toString().replace(/(?!^)(?=(?:\\d{3})+(?:\\.|$))/gm, ' ');\n};\n\nconst getLabelCheckbox = (deduction, year) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkbox__sum\",\n      children: `${format(deduction)} рублей `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkbox__year\",\n      children: [\"\\u0432\", year === 1 ? \"о\" : \"\", \" \", year + 1, \"-\", [1, 5, 6, 7].includes(year) ? \"ой\" : year === 2 ? \"ий\" : \"ый\", \" \\u0433\\u043E\\u0434\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst YearlyTax = ({\n  deductionList\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"early-pay\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"early-pay__label\",\n      children: \"\\u0418\\u0442\\u043E\\u0433\\u043E \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0432\\u043D\\u0435\\u0441\\u0442\\u0438 \\u0432 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0435 \\u0434\\u043E\\u0441\\u0440\\u043E\\u0447\\u043D\\u044B\\u0445:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), deductionList.map((deduction, i) => {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        isDisabled: false,\n        className: `early-pay__checkbox`,\n        children: getLabelCheckbox(deduction, i)\n      }, `${deduction}-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = YearlyTax;\nexport default YearlyTax;\n\nvar _c;\n\n$RefreshReg$(_c, \"YearlyTax\");","map":{"version":3,"sources":["/Users/teo/Documents/test_works/outside_digital/src/components/YearlyTax.tsx"],"names":["React","Checkbox","format","deduction","toString","replace","getLabelCheckbox","year","includes","YearlyTax","deductionList","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAMA,MAAMC,MAAM,GAAIC,SAAD,IAAuB;AACpC,SAAOA,SAAS,CACfC,QADM,GAENC,OAFM,CAEE,+BAFF,EAEmC,GAFnC,CAAP;AAGD,CAJD;;AAMA,MAAMC,gBAAgB,GAAG,CAACH,SAAD,EAAoBI,IAApB,KAAqC;AAC5D,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,gBACI,GAAEL,MAAM,CAACC,SAAD,CAAY;AADxB;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA,2BACII,IAAI,KAAK,CAAT,GAAa,GAAb,GAAmB,EADvB,OAC4BA,IAAI,GAAG,CADnC,OACuC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAaC,QAAb,CAAsBD,IAAtB,IAA8B,IAA9B,GAClCA,IAAI,KAAK,CAAT,GAAa,IAAb,GAAoB,IAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD,CAZD;;AAcA,MAAME,SAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AAC/D,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,aAAa,CAACC,GAAd,CAAkB,CAACR,SAAD,EAAYS,CAAZ,KAAkB;AACnC,0BACI,QAAC,QAAD;AAEI,QAAA,UAAU,EAAE,KAFhB;AAGI,QAAA,SAAS,EAAG,qBAHhB;AAAA,kBAIGN,gBAAgB,CAACH,SAAD,EAAYS,CAAZ;AAJnB,SACU,GAAET,SAAU,IAAGS,CAAE,EAD3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAQD,KATA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBD;;KAAMH,S;AAoBN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Checkbox from './Checkbox';\n\ntype Props = {\n  deductionList: number[];\n}\n\nconst format = (deduction: number) => {\n  return deduction\n  .toString()\n  .replace(/(?!^)(?=(?:\\d{3})+(?:\\.|$))/gm, ' ');\n};\n\nconst getLabelCheckbox = (deduction: number, year: number) => {\n  return (\n    <>\n      <span className=\"checkbox__sum\">\n        {`${format(deduction)} рублей `}\n      </span>\n      <span className=\"checkbox__year\">\n        в{year === 1 ? \"о\" : \"\"} {year + 1}-{[1, 5, 6, 7].includes(year) ? \"ой\" :\n          (year === 2 ? \"ий\" : \"ый\")} год\n      </span>\n    </>\n  );\n};\n\nconst YearlyTax: React.FC<Props> = ({ deductionList }: Props) => {\n  return (\n    <div className=\"early-pay\">\n      <label className=\"early-pay__label\">\n        Итого можете внести в качестве досрочных:\n      </label>\n      {deductionList.map((deduction, i) => {\n        return (\n            <Checkbox\n                key={`${deduction}-${i}`}\n                isDisabled={false}\n                className={`early-pay__checkbox`}>\n              {getLabelCheckbox(deduction, i)}\n            </Checkbox>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default YearlyTax;\n"]},"metadata":{},"sourceType":"module"}